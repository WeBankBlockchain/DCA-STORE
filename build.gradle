buildscript {
	ext {
		springBootVersion = '2.7.18'
	}
	repositories {
		maven { url "http://maven.weoa.com/nexus/content/groups/public/"; }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'com.github.sherter.googlejavaformatgradleplugin:google-java-format-gradle-plugin:0.9-SNAPSHOT'
	}
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.github.sherter.google-java-format'


group = 'com.webank'
version = '2_1_0'
sourceCompatibility = '1.8'


repositories {
//	mavenCentral()
	maven {
		url "http://maven.weoa.com/nexus/content/groups/public/"
	}
	mavenLocal()
}

dependencies {
	annotationProcessor "org.projectlombok:lombok"
	compileOnly "org.projectlombok:lombok"
	testAnnotationProcessor "org.projectlombok:lombok"
	testCompileOnly "org.projectlombok:lombok"
	implementation ('org.springframework.boot:spring-boot-starter')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework:spring-web:5.3.34'

	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation "org.springframework.boot:spring-boot-starter-aop"
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.4.2'
	implementation("org.yaml:snakeyaml:2.0")
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
	implementation 'cn.webank.bsp:encrypt:0.1.0'
	compile "org.apache.commons:commons-lang3:3.6"
	compile "commons-io:commons-io:2.7"
	compile group: 'com.google.guava', name: 'guava', version: '32.0.0-jre'
	compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation 'cn.hutool:hutool-all:5.8.29'

	implementation 'com.squareup.okio:okio:1.17.6'

}

configurations {
	all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
	all*.exclude group: 'log4j', module: 'log4j'
	compileOnly {
		extendsFrom annotationProcessor
	}
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources  {
			srcDir 'src/main/resources'
		}
	}
}
test {
	useJUnitPlatform()
}

bootJar {
	destinationDir file('dist')
	archiveName project.name +'_1780' + '.jar'
	exclude '**/*.properties'
	exclude '**/*.yml'
	exclude '**/*.xml'
}

task aomp {
	doLast {
		copy {
			from file('src/main/resources/aomp/')
			into 'dist'
		}
	}
}

task dev {
	doLast {
		copy {
			from file('src/main/resources/application.yml')
			into 'dist/conf/'
		}
		copy {
			from file('src/main/resources/script/')
			into 'dist/'
		}
	}
}

jar {
	enabled = true
	destinationDir file('dist')
	archiveName project.name + '.jar'
	exclude '**/*.properties'
	exclude '**/*.yml'
	doLast {
		copy {
			from file('src/main/resources/')
			into 'dist/config'
		}
		copy {
			from configurations.runtime
			into 'dist/lib'
		}
	}
}

clean {
	println "dca-store delete ${projectDir}/dist"
	delete "${projectDir}/dist"
}

//googleJavaFormat {
//	toolVersion = '1.7'
//	options style: 'AOSP'
//	source = sourceSets*.allJava
//	include '**/*.java'
//}
